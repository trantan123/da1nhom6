package View;

import Extensions.quyenDanhNhap;
import Model.model_dieukienapdung;
import Model.KhachHang;
import Model.DienThoaiChiTiet;
import Repository.DienThoai_DAO;
import Model.PGG_KH;
import Model.HoaDonChiTiet;
import Repository.HoadonchotietDao;
import Repository.DienThoaiChiTiet_DAO;
import java.awt.Color;
import java.awt.Font;
import java.math.BigDecimal;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Model.hoadon;
import Model.Dienthoai_Dienthoaichitiet;
import Repository.qlhoadon;
import Repository.KhachHangDAO;
import java.awt.Frame;
import Repository.QL_PGG_KH;
import Repository.qlphieugiamgia;
import Repository.qldieukienapdung;
import Repository.Dienthoai_DienthoaichitietDao;
import java.awt.GridLayout;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Properties;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class BanHang_JPanel extends javax.swing.JPanel {
    private String email;
    private String matkhau;
    private String emailuser;
    private boolean check;


    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getMatkhau() {
        return matkhau;
    }

    public void setMatkhau(String matkhau) {
        this.matkhau = matkhau;
    }

    public String getEmailuser() {
        return emailuser;
    }

    public void setEmailuser(String emailuser) {
        this.emailuser = emailuser;
    }
    
    Dienthoai_DienthoaichitietDao dtctdtdao = new Dienthoai_DienthoaichitietDao();
    qlhoadon qlhd = new qlhoadon();
    QL_PGG_KH pgg_kh = new QL_PGG_KH();
    qlphieugiamgia qlpgg = new qlphieugiamgia();
    KhachHangDAO khdao = new KhachHangDAO();
    qldieukienapdung qldk = new qldieukienapdung();
    HoadonchotietDao hdct = new HoadonchotietDao();
    DienThoaiChiTiet_DAO dtctdao = new DienThoaiChiTiet_DAO();
    DienThoai_DAO dtdao = new DienThoai_DAO();

//    float tongtienbase;

    ArrayList<String> data_mapgg = new ArrayList<>();
    ArrayList<String> list_cliiiing = new ArrayList<>();
    ArrayList<String> list_cliiiing_tt = new ArrayList<>();

    public BanHang_JPanel() {
        initComponents();
        jPanel_DienThoai.setBackground(Color.white);
        jPanel_DonHang.setBackground(Color.white);
        jPanel_GioHang.setBackground(Color.white);
        jPanel_HoaDon.setBackground(Color.white);
        jPanel_KhachHang.setBackground(Color.white);
        tblHoaDon.setRowHeight(30);
        tblHoaDonChiTiet.setRowHeight(30);
        tblDienThoai.setRowHeight(30);
        load_tb_hoadon((ArrayList<hoadon>) qlhd.selectAll());
        load_tbKH((ArrayList<Dienthoai_Dienthoaichitiet>) dtctdtdao.selectAll());
    }

    public void load_tbKH(ArrayList<Dienthoai_Dienthoaichitiet> list) {
        DefaultTableModel dtm = (DefaultTableModel) tblDienThoai.getModel();
        dtm.setRowCount(0);
        for (Dienthoai_Dienthoaichitiet x : list) {
            dtm.addRow(new Object[]{
                x.getMadt(),
                x.getTendt(),
                x.getDongia(),
                x.getMausac(),
                x.getSoluongton()
            });
        }
    }

    public void load_tb_hoadon(ArrayList<hoadon> list) {
        DefaultTableModel dtm = (DefaultTableModel) tblHoaDon.getModel();
        dtm.setRowCount(0);
        for (hoadon x : list) {
            if(x.getTrangthai().equalsIgnoreCase("Chưa thanh toán")){
            dtm.addRow(new Object[]{
                x.getMahd(),
                x.getNgaylap(),
                x.getManv(),
                x.getTrangthai()
                    
            });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_HoaDon = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jPanel_GioHang = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDonChiTiet = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel_DonHang = new javax.swing.JPanel();
        jPanel_KhachHang = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tb_makh = new javax.swing.JLabel();
        lb_sdt = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lb_tenkh = new javax.swing.JLabel();
        cbb_pgg = new javax.swing.JComboBox<>();
        jcb_pgg = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        lb_ttphieu = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTienKHDua = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jta_ghichu = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        lblTienThua = new javax.swing.JLabel();
        btnTaoHoaDon = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        lb_mahd = new javax.swing.JLabel();
        lb_tongtien = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cbb_thanhtoan = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        lb_tongtiensaugg = new javax.swing.JLabel();
        jPanel_DienThoai = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDienThoai = new javax.swing.JTable();
        txtTimKiemDTCT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel_HoaDon.setBorder(javax.swing.BorderFactory.createTitledBorder("Hóa đơn"));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Ngày tạo", "Nhân viên tạo", "Trạng thái"
            }
        ));
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblHoaDon);

        javax.swing.GroupLayout jPanel_HoaDonLayout = new javax.swing.GroupLayout(jPanel_HoaDon);
        jPanel_HoaDon.setLayout(jPanel_HoaDonLayout);
        jPanel_HoaDonLayout.setHorizontalGroup(
            jPanel_HoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_HoaDonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel_HoaDonLayout.setVerticalGroup(
            jPanel_HoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_HoaDonLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel_GioHang.setBorder(javax.swing.BorderFactory.createTitledBorder("Giỏ hàng"));

        tblHoaDonChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Đơn giá", "Số lượng", "Thành tiền"
            }
        ));
        tblHoaDonChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonChiTietMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblHoaDonChiTietMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDonChiTiet);

        jPanel7.setLayout(new java.awt.GridLayout(1, 3, 2, 0));

        javax.swing.GroupLayout jPanel_GioHangLayout = new javax.swing.GroupLayout(jPanel_GioHang);
        jPanel_GioHang.setLayout(jPanel_GioHangLayout);
        jPanel_GioHangLayout.setHorizontalGroup(
            jPanel_GioHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_GioHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_GioHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_GioHangLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel_GioHangLayout.setVerticalGroup(
            jPanel_GioHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_GioHangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_DonHang.setBorder(javax.swing.BorderFactory.createTitledBorder("Đơn hàng"));

        jPanel_KhachHang.setBorder(javax.swing.BorderFactory.createTitledBorder("Khách hàng"));

        jLabel10.setText("Phiếu giảm giá:");

        jButton1.setText("chọn");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Mã KH");

        jLabel3.setText("Email");

        jLabel12.setText("Tên KH");

        cbb_pgg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbb_pggActionPerformed(evt);
            }
        });

        jcb_pgg.setText("sự dụng phiếu giảm giá");
        jcb_pgg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_pggActionPerformed(evt);
            }
        });

        jLabel9.setText("Trạng thái phiếu");

        javax.swing.GroupLayout jPanel_KhachHangLayout = new javax.swing.GroupLayout(jPanel_KhachHang);
        jPanel_KhachHang.setLayout(jPanel_KhachHangLayout);
        jPanel_KhachHangLayout.setHorizontalGroup(
            jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_KhachHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_KhachHangLayout.createSequentialGroup()
                        .addGroup(jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tb_makh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_tenkh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_sdt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbb_pgg, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_KhachHangLayout.createSequentialGroup()
                        .addGroup(jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_KhachHangLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lb_ttphieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jcb_pgg, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel_KhachHangLayout.setVerticalGroup(
            jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_KhachHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(tb_makh, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_tenkh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lb_sdt, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbb_pgg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_pgg)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_ttphieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel4.setText("Mã hóa đơn:");

        jLabel5.setText("Tổng tiền:");

        jLabel6.setText("Tiền khách đưa:");

        txtTienKHDua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTienKHDuaKeyPressed(evt);
            }
        });

        jLabel7.setText("Tiền thừa:");

        jLabel8.setText("Ghi chú:");

        jta_ghichu.setColumns(20);
        jta_ghichu.setRows(5);
        jScrollPane4.setViewportView(jta_ghichu);

        jPanel6.setLayout(new java.awt.GridLayout(2, 2, 2, 0));

        lblTienThua.setText("   ");

        btnTaoHoaDon.setText("Tạo");
        btnTaoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHoaDonActionPerformed(evt);
            }
        });

        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        btnLamMoi.setText("Mới");
        btnLamMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLamMoiMouseClicked(evt);
            }
        });
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jLabel11.setText("Phương thúc thanh toán");

        cbb_thanhtoan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiền mặt", "Chuyển khoản" }));

        jButton2.setText("Gửi hóa đơn");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel13.setText("Tổng tiền sau gg:");

        javax.swing.GroupLayout jPanel_DonHangLayout = new javax.swing.GroupLayout(jPanel_DonHang);
        jPanel_DonHang.setLayout(jPanel_DonHangLayout);
        jPanel_DonHangLayout.setHorizontalGroup(
            jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_DonHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_DonHangLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_tongtiensaugg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_tongtien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_mahd, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTienKHDua, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel_DonHangLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4)))
                .addContainerGap())
            .addGroup(jPanel_DonHangLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTaoHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addGroup(jPanel_DonHangLayout.createSequentialGroup()
                        .addComponent(btnThanhToan)
                        .addGap(18, 18, 18)
                        .addComponent(btnHuy)))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(jPanel_DonHangLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel_KhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel_DonHangLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbb_thanhtoan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_DonHangLayout.createSequentialGroup()
                .addContainerGap(347, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel_DonHangLayout.setVerticalGroup(
            jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_DonHangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_KhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(cbb_thanhtoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(lb_mahd, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(lb_tongtien, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_tongtiensaugg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTienKHDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTienThua)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTaoHoaDon)
                    .addComponent(btnThanhToan)
                    .addComponent(btnHuy))
                .addGap(18, 18, 18)
                .addGroup(jPanel_DonHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoi)
                    .addComponent(jButton2))
                .addGap(8, 8, 8)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jPanel_DienThoai.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách điện thoại"));

        tblDienThoai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã điện thoại", "Tên điện thoại", "Đơn giá", "Màu sắc", "Số lượng tồn kho"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDienThoai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDienThoaiMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDienThoai);

        txtTimKiemDTCT.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        txtTimKiemDTCT.setForeground(new java.awt.Color(153, 153, 153));
        txtTimKiemDTCT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemDTCTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemDTCTFocusLost(evt);
            }
        });
        txtTimKiemDTCT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemDTCTKeyPressed(evt);
            }
        });

        jLabel1.setText("Tìm kiếm");

        javax.swing.GroupLayout jPanel_DienThoaiLayout = new javax.swing.GroupLayout(jPanel_DienThoai);
        jPanel_DienThoai.setLayout(jPanel_DienThoaiLayout);
        jPanel_DienThoaiLayout.setHorizontalGroup(
            jPanel_DienThoaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_DienThoaiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_DienThoaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel_DienThoaiLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiemDTCT, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel_DienThoaiLayout.setVerticalGroup(
            jPanel_DienThoaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_DienThoaiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_DienThoaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTimKiemDTCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_GioHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_DienThoai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_HoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel_DonHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel_DonHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel_HoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel_GioHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel_DienThoai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    public void load_giohang() {
        DefaultTableModel dtm = (DefaultTableModel) this.tblHoaDonChiTiet.getModel();
        dtm.setRowCount(0);
        for (HoaDonChiTiet x : hdct.select_hdct(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0).toString())) {
            String dongia = String.valueOf(x.getDonGia());
            String soluong = String.valueOf(x.getSoLuong());
//            double thanhtien = x.getDonGia() * x.getSoLuong();
            BigDecimal bdNumber1 = new BigDecimal(dongia);
            BigDecimal bdNumber2 = new BigDecimal(soluong);
            BigDecimal result = bdNumber1.multiply(bdNumber2);
            String madt = dtctdao.budtct(x.getMaDTCT()).get(0).getMaDT();
            String tendt = dtdao.gettendt(madt).get(0).getTenDienThoai();
            dtm.addRow(new Object[]{
                madt,
                tendt,
                new BigDecimal(dongia),
                soluong,
                result,
            });
        }
  }
    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        jcb_pgg.setSelected(false);
        try {
            hoadon hd = qlhd.get_khachhang(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0).toString()).get(0);
            KhachHang kh = qlhd.get_kh_by_makh(hd.getMakhachhang()).get(0);
            tb_makh.setText(kh.getMaKH());
            lb_tenkh.setText(kh.getHoTen());
            lb_sdt.setText(kh.getEmail());
            lb_mahd.setText(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0).toString());
            get_cbbpgg_kh(kh.getMaKH());
            lb_tongtien.setText(String.valueOf(hd.getTongtien()));
            lb_tongtiensaugg.setText(String.valueOf(hd.getTongtiensaugg()));
        } catch (Exception e) {
            tb_makh.setText("");
            lb_tenkh.setText("");
            lb_sdt.setText("");
            get_cbbpgg_kh(null);
            lb_mahd.setText(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0).toString());
        }
        load_giohang();
        loadtongtien();
        load_pgg();
//        loadtongtien();
        try{
            lb_ttphieu.setText(list_cliiiing_tt.get(cbb_pgg.getSelectedIndex()));
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_tblHoaDonMouseClicked
    public void update_sl() {
        JFrame frame = new JFrame("Chỉnh sửa giỏ hàng");
        JTextField inputField = new JTextField();
        int sl_giohang = 0;
        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(2, 1));
        panel.add(new JLabel("Nhập số lượng mới:"));
        panel.add(inputField);
        // Hiển thị JOptionPane có 3 nút và ô nhập liệu
        int option = JOptionPane.showOptionDialog(
                frame,
                panel,
                "Custom JOptionPane",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.INFORMATION_MESSAGE,
                null,
                new Object[]{"Sửa", "Xóa", "Cancel"},
                "Sửa");

        switch (option) {
            case JOptionPane.YES_OPTION -> {
                // Xử lý khi nút "Sửa" được chọn
                try {
                    int sl = Integer.parseInt(inputField.getText());
                    String madtct = dtctdao.getmadtct(tblHoaDonChiTiet.getValueAt(tblHoaDonChiTiet.getSelectedRow(), 0).toString()).get(0).getMaDTCT();
                    HoaDonChiTiet dhn = new HoaDonChiTiet(null, madtct, sl, null, null, "fhdhsf");
                    hdct.update(dhn);
                    sl_giohang = Integer.parseInt(tblHoaDonChiTiet.getValueAt(tblHoaDonChiTiet.getSelectedRow(), 3).toString());
                    if (sl < sl_giohang) {
                        update_sl(String.valueOf(dtctdao.budtct(madtct).get(0).getSoLuongTonKho() + (sl_giohang - sl)), madtct);
                    } else if (sl > sl_giohang) {
                        if ((dtctdao.budtct(madtct).get(0).getSoLuongTonKho() - (sl - sl_giohang) < 0)) {
                            JOptionPane.showMessageDialog(frame, "Kho không đủ số lượng");
                            update_sl();
                            return;

                        } else {
                            update_sl(String.valueOf(dtctdao.budtct(madtct).get(0).getSoLuongTonKho() - (sl - sl_giohang)), madtct);
                        }
                    } else {
                        update_sl(String.valueOf(dtctdao.budtct(madtct).get(0).getSoLuongTonKho()), madtct);
                    }

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(frame, "Nhập số ko nhập chữ");
                    update_sl();
                    return;
                }
            }
            case JOptionPane.NO_OPTION -> {
                String madtct = dtctdao.getmadtct(tblHoaDonChiTiet.getValueAt(tblHoaDonChiTiet.getSelectedRow(), 0).toString()).get(0).getMaDTCT();
                hdct.delete(madtct);
                if (tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 3).toString().equalsIgnoreCase("Chưa thanh toán")) {
                    update_sl(String.valueOf(dtctdao.budtct(madtct).get(0).getSoLuongTonKho() + Integer.parseInt(tblHoaDonChiTiet.getValueAt(tblHoaDonChiTiet.getSelectedRow(), 3).toString())), madtct);
                }
            }

            default -> // Xử lý khi nút "Cancel" được chọn hoặc cửa sổ đóng đi
                System.out.println("");
        }
    }
    private void tblHoaDonChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonChiTietMouseClicked
        if (tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 3).toString().equalsIgnoreCase("Đã thanh toán")) {
            JOptionPane.showMessageDialog(this, "Hóa đơn đã thanh toán");
        } else {
            update_sl();
            load_giohang();
            load_tbKH((ArrayList<Dienthoai_Dienthoaichitiet>) dtctdtdao.selectAll());
            load_pgg();
            check_gg();
        }

    }//GEN-LAST:event_tblHoaDonChiTietMouseClicked
    public String input_sl() {
        JFrame frame = new JFrame("InputDialog Example");
        int row = tblDienThoai.getSelectedRow();
        // Hiển thị hộp thoại thông báo và nhận giá trị từ người dùng
        String inputValue = JOptionPane.showInputDialog(frame, "Nhập dữ liệu:");
        if (inputValue == null) {
            return "dung";
        }
        try {
            if (Integer.parseInt(inputValue) > Integer.parseInt(tblDienThoai.getValueAt(row, 4).toString())) {
                JOptionPane.showMessageDialog(frame, "Kho không đủ số lượng");
                inputValue = input_sl();
            } else if (inputValue != null) {
                JOptionPane.showMessageDialog(frame, "Thêm thành công : " + inputValue + " sản phẩm");
            } else {

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(frame, "Hãy nhập số");
            inputValue = input_sl();
        }

        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(300, 200);
        return inputValue;
    }
    private void tblDienThoaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDienThoaiMouseClicked

        try {
            tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, " Hãy chọn hóa đơn !!");
            return;
        }
        if (tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 3).toString().equalsIgnoreCase("Đã thanh toán")) {
            JOptionPane.showMessageDialog(this, "Hóa đơn đã thanh toán");
        } else {
//            int row = tblDienThoai.getSelectedRow();
            String sl = input_sl();
            if (!sl.equalsIgnoreCase("dung")) {

                loadtongtien();
                String sl_new = String.valueOf(sl);

                int row_dt = tblDienThoai.getSelectedRow();
                for (DienThoaiChiTiet x : dtctdao.getmadtct(tblDienThoai.getValueAt(row_dt, 0).toString())) {
                    HoaDonChiTiet datahdct = new HoaDonChiTiet(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0).toString(), x.getMaDTCT(), Integer.parseInt(sl_new), tblDienThoai.getValueAt(row_dt, 2).toString(), String.valueOf(new BigDecimal(Double.parseDouble(sl) * Double.parseDouble(tblDienThoai.getValueAt(row_dt, 2).toString()))), jta_ghichu.getText());
                    try {
                        int sl_up_dtct = Integer.parseInt(tblDienThoai.getValueAt(tblDienThoai.getSelectedRow(), 4).toString()) - datahdct.getSoLuong();
                        hdct.insert(datahdct);
                        update_sl(String.valueOf(sl_up_dtct), datahdct.getMaDTCT());
                    } catch (Exception e) {
                        int sl_them = hdct.select_sldt(x.getMaDTCT()).get(0).getSoLuong();
                        int sl_all_update = Integer.parseInt(sl_new) + sl_them;
                        datahdct.setSoLuong(sl_all_update);
                        hdct.update(datahdct);
                        int sl_update = Integer.parseInt(tblDienThoai.getValueAt(tblDienThoai.getSelectedRow(), 4).toString()) - Integer.parseInt(sl_new);
                        update_sl(String.valueOf(sl_update), datahdct.getMaDTCT());
                    }
                }
                load_giohang();
                load_pgg();
                load_tbKH((ArrayList<Dienthoai_Dienthoaichitiet>) dtctdtdao.selectAll());
            }
        }
        loadtongtien();
        load_pgg();
    }//GEN-LAST:event_tblDienThoaiMouseClicked
    BigDecimal tongtienbase;
    public void loadtongtien() {
        int index = tblHoaDonChiTiet.getRowCount();

        float tongtien = 0;
        for (int i = 0; i < index; i++) {
            tongtien = tongtien + Float.parseFloat(tblHoaDonChiTiet.getValueAt(i, 4).toString());
        }
        lb_tongtien.setText(String.valueOf(tongtien));
        tongtienbase = new BigDecimal(tongtien);
    }
    private void txtTimKiemDTCTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemDTCTFocusGained

    }//GEN-LAST:event_txtTimKiemDTCTFocusGained

    private void txtTimKiemDTCTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemDTCTFocusLost

    }//GEN-LAST:event_txtTimKiemDTCTFocusLost

    private void txtTimKiemDTCTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemDTCTKeyPressed
        String tendt = txtTimKiemDTCT.getText();
        DefaultTableModel model = (DefaultTableModel) this.tblDienThoai.getModel();
        model.setRowCount(0);
//        List<Dienthoai_Dienthoaichitiet> new_list = new ArrayList<>();
        List<Dienthoai_Dienthoaichitiet> xxx = dtctdtdao.select_search(tendt);
        for (Dienthoai_Dienthoaichitiet x : xxx) {
            model.addRow(new Object[]{
                x.getMadt(),
                x.getTendt(),
                x.getDongia(),
                x.getMausac(),
                x.getSoluongton()
            });
        }

    }//GEN-LAST:event_txtTimKiemDTCTKeyPressed

    private void btnLamMoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiMouseClicked

    }//GEN-LAST:event_btnLamMoiMouseClicked

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
//        try {
            qlhd.delete(tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0));
            JOptionPane.showMessageDialog(this, "Hủy thành công !");
            if(!tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 3).toString().equalsIgnoreCase("Đã thanh toán")){
                for(int i = 0;i<tblHoaDonChiTiet.getRowCount();i++){
                    String madtct = dtctdao.getmadtct(tblHoaDonChiTiet.getValueAt(i, 0).toString()).get(0).getMaDTCT();
                    update_sl(String.valueOf(dtctdao.budtct(madtct).get(0) .getSoLuongTonKho() + Integer.parseInt(tblHoaDonChiTiet.getValueAt(i, 3).toString())), madtct);
                }
                load_tbKH((ArrayList<Dienthoai_Dienthoaichitiet>) dtctdtdao.selectAll());
            }
            load_tb_hoadon((ArrayList<hoadon>) qlhd.selectAll());
            
            DefaultTableModel dtm = (DefaultTableModel) this.tblHoaDonChiTiet.getModel();
            dtm.setRowCount(0);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Chọn vào hóa đơn để Hủy !");
//        }
    }//GEN-LAST:event_btnHuyActionPerformed
    public boolean check_thanhtoan() {
        if (lb_mahd.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Chọn hóa đơn trước khi thanh toán");
        }
        else if (tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 3).toString().equalsIgnoreCase("Đã thanh toán")) {
            JOptionPane.showMessageDialog(this, "Hóa đơn đã thanh toán !!");
        }
        else if (lb_tongtien.getText().equalsIgnoreCase("0.0")) {
            JOptionPane.showMessageDialog(this, "Hãy chọn sản phẩm cho hóa đơn");
        }
        else if (lb_tongtien.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Hãy chọn sản phẩm của khách hàng cho hóa đơn");
        } else if (txtTienKHDua.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Tiền khách đưa không đc để trống");
        } else if (Float.parseFloat(txtTienKHDua.getText()) < Float.parseFloat(lb_tongtiensaugg.getText())) {
            JOptionPane.showMessageDialog(this, "Tiền chưa đủ");
        }  else {
            return true;
        }
        return false;
    }

    public void update_sl(String sl, String madtct) {
        dtctdao.update_bf_thanhtoan(sl, madtct);
    }
    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
            
        if (check_thanhtoan()) {
            load_tb_hoadon((ArrayList<hoadon>) qlhd.selectAll());
            hoadon hd = new hoadon(lb_mahd.getText(), null, null, null, null, cbb_thanhtoan.getSelectedItem().toString(), jta_ghichu.getText(), "Đã thanh toán", Float.parseFloat(lb_tongtien.getText()), Float.parseFloat(lb_tongtiensaugg.getText()));
            qlhd.update(hd);
            JOptionPane.showMessageDialog(this, "Thanh toán thành công !");
            DefaultTableModel dtm = (DefaultTableModel) this.tblHoaDonChiTiet.getModel();
            dtm.setRowCount(0);
            load_tbKH((ArrayList<Dienthoai_Dienthoaichitiet>) dtctdtdao.selectAll());
            load_tb_hoadon((ArrayList<hoadon>) qlhd.selectAll());
            tb_makh.setText("");
            lb_tenkh.setText("");
            lb_sdt.setText("");
            try{
                cbb_pgg.setSelectedIndex(0);
            }
            catch(Exception e){

            }
            jcb_pgg.setSelected(false);
            lb_ttphieu.setText("");
            lb_mahd.setText("");
            lb_tongtien.setText("");
            txtTienKHDua.setText("");
            lblTienThua.setText("");
            jta_ghichu.setText("");
            cbb_pgg.removeAllItems();
        }
       
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnTaoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHoaDonActionPerformed
        LocalDateTime now = LocalDateTime.now();

        // Định dạng ngày giờ
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

        // In ra ngày giờ hiện tại theo định dạng đã chọn
        String ngaylap = now.format(formatter);

        hoadon data = qlhd.select_macc().get(0);
        String mahd = data.getMahd();
        // Tách phần ký tự và phần số
        String alphaPart = mahd.replaceAll("[^A-Za-z]", ""); // Lấy phần ký tự
        String numericPart = mahd.replaceAll("[^0-9]", ""); // Lấy phần số

        // Tăng giá trị số lên 1
        int numericValue = Integer.parseInt(numericPart);
        numericValue++;

        // Tạo chuỗi mới
        String newmahd = alphaPart + String.format("%03d", numericValue); // Định dạng số với 3 chữ số
        String mapgg = null;
        try {
            mapgg = data_mapgg.get(cbb_pgg.getSelectedIndex());
        } catch (Exception e) {

        }
        String makh = tb_makh.getText();
        if (makh.equalsIgnoreCase("")) {
            makh = null;
        }
        hoadon hd = new hoadon(newmahd, ngaylap, makh, quyenDanhNhap.user.getMaNV(), mapgg, null, null, "Chưa thanh toán", 1, 1);
        qlhd.insert(hd);
        load_tb_hoadon((ArrayList<hoadon>) qlhd.selectAll());
    }//GEN-LAST:event_btnTaoHoaDonActionPerformed

    private void txtTienKHDuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienKHDuaKeyPressed
        try {
            BigDecimal tongtien = new BigDecimal(lb_tongtiensaugg.getText());
            BigDecimal tienbu = new BigDecimal(txtTienKHDua.getText());
            lblTienThua.setText(String.valueOf(tienbu.subtract(tongtien)));
        } catch (Exception e) {

        }
    }//GEN-LAST:event_txtTienKHDuaKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        data_mapgg.clear();
        Frame SanPham_JPanel = null;
        String mapgg = null;
        JDialog_KhachHang o = new JDialog_KhachHang(SanPham_JPanel, true);
        o.setVisible(true);
        KhachHang data = o.kh;
        tb_makh.setText(data.getMaKH());
        lb_sdt.setText(data.getEmail());
        lb_tenkh.setText(data.getHoTen());
        get_cbbpgg_kh(data.getMaKH());
        try {
            lb_ttphieu.setText(list_cliiiing_tt.get(cbb_pgg.getSelectedIndex()));
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    public String check_tt(String date_check) {
        LocalDateTime endTime = null;
        try {
            endTime = LocalDateTime.parse(date_check, DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss.S"));
        } catch (Exception e) {
            endTime = LocalDateTime.parse(date_check, DateTimeFormatter.ofPattern("yyyy-MM-dd H:mm:ss.S"));
        }

        LocalDateTime now = LocalDateTime.now();

        if (now.isAfter(endTime)) {
            return "Hết hạn";
        } else {
            return "Chưa hết hạn";
        }
    }
    
    public void get_cbbpgg_kh(String makh) {
        ArrayList<String> list_makh = new ArrayList<>();
        list_cliiiing.clear();
        list_cliiiing_tt.clear();
        for (PGG_KH x : pgg_kh.select_pggcuakh(makh)) {
            String gtr_sl = x.getGtr();
            list_cliiiing.add(gtr_sl);
            data_mapgg.add(x.getMapgg());
            model_dieukienapdung data_dk = qldk.select_gtr(qlpgg.select_madkad(x.getMapgg()).get(0).getMaDieuKienGiamGia()).get(0);
            try {
                String tt = check_tt(x.getNgaykth() + " 00:00:00.0");
                list_cliiiing_tt.add(tt);
            } catch (Exception e) {

            }
            String dkgg;
            String full;
            if (data_dk.getLoaidk().equalsIgnoreCase("Giảm khi sinh nhật")) {
                full = "giảm " + gtr_sl + " khi sinh nhật khách hàng";
            } else {

                dkgg = data_dk.getGtrsl() + data_dk.getSl();
                if (data_dk.getGtrsl() == null) {
                    dkgg = dkgg.replace("null", "");
                    full = "giảm " + gtr_sl + " khi mua trên " + dkgg + " cái";
                } else {
                    dkgg = dkgg.replace("null", "");
                    full = "giảm " + gtr_sl + " khi mua trên " + dkgg;
            }
            list_makh.add(full);
        }
                }
        DefaultComboBoxModel<String> model_kh = new DefaultComboBoxModel<>(list_makh.toArray(String[]::new));
        cbb_pgg.setModel(model_kh);
    }
    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        tb_makh.setText("");
        lb_tenkh.setText("");
        lb_sdt.setText("");
        try{
            cbb_pgg.setSelectedIndex(0);
        }
        catch(Exception e){
            
        }
        jcb_pgg.setSelected(false);
        lb_ttphieu.setText("");
        lb_mahd.setText("");
        lb_tongtien.setText("");
        txtTienKHDua.setText("");
        lblTienThua.setText("");
        jta_ghichu.setText("");
        cbb_pgg.removeAllItems();
    }//GEN-LAST:event_btnLamMoiActionPerformed
    public void load_pgg() {

        
        if (jcb_pgg.isSelected()) {
            
            int index = cbb_pgg.getSelectedIndex();
            try {
                String giamgia;

                if (list_cliiiing.isEmpty()) {
                    giamgia = cbb_pgg.getSelectedItem().toString();
                } else {
                    giamgia = list_cliiiing.get(index);
                }
                if (giamgia.contains("%")) {
                    giamgia = giamgia.replace("%", "");
                    BigDecimal bdNumber1 = new BigDecimal(giamgia);
//                    BigDecimal bdNumber2 = new BigDecimal(tongtienbase);
                    BigDecimal result = bdNumber1.multiply(tongtienbase);
                    BigDecimal divisionResult = result.divide(new BigDecimal("100"));
                    lb_tongtien.setText(String.valueOf(tongtienbase));
                    lb_tongtiensaugg.setText(String.valueOf(divisionResult));
                } else {
                    BigDecimal gg = new BigDecimal(giamgia);
                    BigDecimal tiesaugg = tongtienbase.subtract(gg);
                    lb_tongtien.setText(String.valueOf(tongtienbase));
                    lb_tongtiensaugg.setText(String.valueOf(tiesaugg));
                }
            } catch (Exception e) {

            }
        } else {
            lb_tongtien.setText(String.valueOf(tongtienbase));
            lb_tongtiensaugg.setText(String.valueOf(tongtienbase));
        }
    }
    private void jcb_pggActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_pggActionPerformed
        // TODO add your handling code here:
        if (lb_ttphieu.getText().equalsIgnoreCase("Hết hạn")) {
            JOptionPane.showMessageDialog(this, "Phiếu đã hết hạn");
            jcb_pgg.setSelected(false);
        } else {
            check_gg();
        }
    }//GEN-LAST:event_jcb_pggActionPerformed
    public void check_gg() {
        try{
            if (jcb_pgg.isSelected()) {
                String giamggia = cbb_pgg.getSelectedItem().toString();
                int viTriKhi = giamggia.indexOf("khi");

                String phanChuoiSauKhi = giamggia.substring(viTriKhi + "khi".length());
                String chuSo = phanChuoiSauKhi.replace(" mua trên ", "");
                int sl = 0;
                float giatri = 0;
                if (chuSo.contains("cái")) {
                    for (int i = 0; i < tblHoaDonChiTiet.getRowCount(); i++) {
                        sl = sl + Integer.parseInt(tblHoaDonChiTiet.getValueAt(i, 3).toString());
                    }
                    int chuso_new = Integer.parseInt(chuSo.replace(" cái", ""));
                    if (sl > chuso_new) {
                        load_pgg();
                        JOptionPane.showMessageDialog(this, "Áp dụng thành công phiếu giảm giá");
                    } else {
                        JOptionPane.showMessageDialog(this, "Không đủ điều kiện để áp dụng");
                        jcb_pgg.setSelected(false);
                    }
                } else {
                    for (int i = 0; i < tblHoaDonChiTiet.getRowCount(); i++) {
                        giatri = giatri + Float.parseFloat((tblHoaDonChiTiet.getValueAt(i, 4).toString()));
                    }
                    float giatri_dkgiam = Float.parseFloat(chuSo);
                    if (giatri > giatri_dkgiam) {
                        load_pgg();
                        JOptionPane.showMessageDialog(this, "Áp dụng thành công phiếu giảm giá");
                    } else {
                        JOptionPane.showMessageDialog(this, "Không đủ điều kiện để áp dụng");
                        jcb_pgg.setSelected(false);
                    }
                }
                loadtongtien();
                load_pgg();
            } else {
                loadtongtien();
                load_pgg();
            }
        }
        catch(Exception e){
            
        }
    }
    private void tblHoaDonChiTietMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonChiTietMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblHoaDonChiTietMouseEntered

    private void cbb_pggActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbb_pggActionPerformed
        // TODO add your handling code here:
        try {
            lb_ttphieu.setText(list_cliiiing_tt.get(cbb_pgg.getSelectedIndex()));
        } catch (Exception e) {

        }
    }//GEN-LAST:event_cbb_pggActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        Frame SanPham_JPanel = null;
        GuiHD_view o = new GuiHD_view(SanPham_JPanel, true);
        o.setVisible(true);
        
//        System.out.println(o.email);
//        System.out.println(o.matkhau);
//        System.out.println(o.emailuser);
        final String username = o.email;
        final String password = o.matkhau;
        
        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");

        Session session = Session.getInstance(props, new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });
        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(username));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(o.emailuser));
            message.setSubject("Hóa đơn");
            String sanpham_hc = null;
            for (int i = 0; i < tblHoaDonChiTiet.getRowCount(); i++) {
                String tensp = tblHoaDonChiTiet.getValueAt(i, 1).toString();
                String giaban = tblHoaDonChiTiet.getValueAt(i, 2).toString();
                String sl = tblHoaDonChiTiet.getValueAt(i, 3).toString();
                float thanhtien = Float.valueOf(sl) * Float.valueOf(giaban);
                if (!tensp.equalsIgnoreCase("null")) {
                    String sanpham = """
                                <tr>
                                    <td>A</td>
                                    <td>soluong VND</td>
                                    <td>2</td>
                                    <td>thanhtien VND</td>
                                </tr>""";
                    String sanpham_new = sanpham.replace("A", tensp).replace("2", sl);
                    String sanpham_new1 = sanpham_new.replace("soluong", giaban);
                    String sanpham_new2 = sanpham_new1.replace("thanhtien", String.valueOf(thanhtien));
                    sanpham_hc = sanpham_hc + sanpham_new2;
                }
            }
            sanpham_hc = sanpham_hc.replace("null", "");
            String html = """
                            <!DOCTYPE html>
                             <html lang="en">
                             <head>
                                 <meta charset="UTF-8">
                                 <meta name="viewport" content="width=device-width, initial-scale=1.0">
                                 <title>Hoa Don</title>
                                 <style>
                                     table {
                                         width: 100%;
                                         border-collapse: collapse;
                                         margin-bottom: 20px;
                                     }

                                     table, th, td {
                                         border: 1px solid black;
                                     }

                                     th, td {
                                         padding: 10px;
                                         text-align: left;
                                     }

                                     th {
                                         background-color: #f2f2f2;
                                     }

                                     .total {
                                         font-weight: bold;
                                     }
                                 </style>
                             </head>
                             <body>

                                 <h2>Hoa Don</h2>

                                 <table>
                                     <tr>
                                         <th>Ten san pham</th>
                                         <th>Gia tien san pham</th>
                                         <th>So luong</th>
                                         <th>Thanh tien</th>
                                     </tr>
                                     cliiiing
                                     <!-- Thêm các dòng khác tương tự cho các sản phẩm khác nếu cần -->
                                 </table>

                                 <p>Ma Hoa Don: HD001</p>
                                 <p>Ngay Tao: hahahah</p>

                                 <p class="total">Tong Tien: huhuhu VND</p>
                                 <p class="total">Tong Tien sau giam gia: hihihi VND</p>

                             </body>
                             </html>
                         """;
            html = html.replace("hihihi", lb_tongtiensaugg.getText());
            html = html.replace("huhuhu", lb_tongtien.getText());
            message.setContent(html.replace("cliiiing", sanpham_hc).replace("HD001", lb_mahd.getText()).replace("hahahah", tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 1).toString()),"text/html");
            My_thread my = new My_thread();
            my.messenger = message;
            my.start();

        } catch (MessagingException e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(this, "Gủi thành công ");
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnTaoHoaDon;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JComboBox<String> cbb_pgg;
    private javax.swing.JComboBox<String> cbb_thanhtoan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel_DienThoai;
    private javax.swing.JPanel jPanel_DonHang;
    private javax.swing.JPanel jPanel_GioHang;
    private javax.swing.JPanel jPanel_HoaDon;
    private javax.swing.JPanel jPanel_KhachHang;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JCheckBox jcb_pgg;
    private javax.swing.JTextArea jta_ghichu;
    private javax.swing.JLabel lb_mahd;
    private javax.swing.JLabel lb_sdt;
    private javax.swing.JLabel lb_tenkh;
    private javax.swing.JLabel lb_tongtien;
    private javax.swing.JLabel lb_tongtiensaugg;
    private javax.swing.JLabel lb_ttphieu;
    private javax.swing.JLabel lblTienThua;
    private javax.swing.JLabel tb_makh;
    private javax.swing.JTable tblDienThoai;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblHoaDonChiTiet;
    private javax.swing.JTextField txtTienKHDua;
    private javax.swing.JTextField txtTimKiemDTCT;
    // End of variables declaration//GEN-END:variables
}
